{"version":3,"sources":["containers/orders/orders.module.css","components/ui/order/order.module.css","components/ui/order/order.js","containers/orders/orders.js"],"names":["module","exports","orders","order","Order","props","ingredient","names","push","name","amount","allingredients","map","res","react_default","a","createElement","key","style","padding","border","display","margin","Fragment","className","classes","totalprice","toFixed","Orders","this","fetchorders","token","userid","_this","spinner","length","spinner_spinner","customer","userId","id","Component","connect","state","ordererror","dispatch","actionCreator"],"mappings":"6EACAA,EAAAC,QAAA,CAAkBC,OAAA,6CCAlBF,EAAAC,QAAA,CAAkBE,MAAA,+JCsCHC,EApCD,SAACC,GAGf,IAAMC,EAAY,GAClB,IAAI,IAAIC,KAASF,EAAMC,WAEvBA,EAAWE,KAAK,CAChBC,KAAOF,EACPG,OAASL,EAAMC,WAAWC,KAM1B,IAAMI,EAAiBL,EAAWM,IAAI,SAAAC,GAAG,OAAKC,EAAAC,EAAAC,cAAA,QAAMC,IAAKJ,EAAIJ,KAAMS,MAAO,CACxEC,QAAS,MACTC,OAAQ,iBACRC,QAAS,eACTC,OAAQ,SACNT,EAAIJ,KALsC,MAK7BI,EAAIH,OALyB,OAO5C,OACFI,EAAAC,EAAAC,cAACF,EAAAC,EAAMQ,SAAP,KAEAT,EAAAC,EAAAC,cAAA,OAAMQ,UAAWC,IAAQtB,OACtBW,EAAAC,EAAAC,cAAA,0BADH,IACyBL,EADzB,IACyCG,EAAAC,EAAAC,cAAA,WACvCF,EAAAC,EAAAC,cAAA,uBAFF,MAEuBX,EAAMqB,WAAWC,QAAQ,GAFhD,+BClBMC,8LAMNC,KAAKxB,MAAMyB,YAAYD,KAAKxB,MAAM0B,MAAOF,KAAKxB,MAAM2B,yCAK5C,IAAAC,EAAAJ,KAEJK,EAAU,KACmB,IAA7BL,KAAKxB,MAAMH,OAAOiC,SAEpBD,EAAWpB,EAAAC,EAAAC,cAACoB,EAAA,EAAD,OAKb,IAAMlC,EAAS2B,KAAKxB,MAAMH,OAAOU,IAAK,SAAAC,GAEtC,GAAIoB,EAAK5B,MAAM2B,SAAWnB,EAAIwB,SAASC,OAEvC,OAAQxB,EAAAC,EAAAC,cAACb,EAAD,CAAOc,IAAKJ,EAAI0B,GAAIjC,WAAYO,EAAIP,WAAYoB,WAAYb,EAAIa,eAKxE,OAGAZ,EAAAC,EAAAC,cAACF,EAAAC,EAAMQ,SAAP,KACAT,EAAAC,EAAAC,cAAA,OAAKQ,UAAWC,IAAQvB,QACxBY,EAAAC,EAAAC,cAAA,4BAECkB,EACAhC,WAtCoBsC,aAsFNC,sBApCS,SAACC,GAEzB,MAAO,CAEPxC,OAASwC,EAAMxC,OACfyC,WAAaD,EAAMC,WACnBZ,MAAQW,EAAMX,MACdC,OAASU,EAAMV,SAWY,SAACY,GAE5B,MAAO,CAEPd,YAAc,SAACC,EAAMC,GAAP,OAAkBY,EAASC,IAA0Bd,EAAMC,OAc1DS,CAA4Cb","file":"static/js/3.9e05f777.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"orders\":\"orders_orders__1_lpl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"order\":\"order_order__31ozV\"};","import React from 'react';\r\nimport classes from './order.module.css';\r\n\r\nconst Order = (props) => {\r\n\r\n\r\nconst ingredient =[];\r\nfor(let names in props.ingredient) {\r\n\r\ningredient.push({\r\nname : names,\r\namount : props.ingredient[names]\r\n\r\n});\r\n\r\n};\r\n\r\nconst allingredients = ingredient.map(res => (<span key={res.name} style={{\r\n  padding: '5px',\r\n  border: '1px solid #ccc',\r\n  display: 'inline-block',\r\n  margin: '15px'\r\n}}>{res.name}  ({res.amount})</span>))\r\n\r\n  return (\r\n<React.Fragment>\r\n\r\n<div  className={classes.order}>\r\n   <b>ingredients :</b> {allingredients} <br/>\r\n  <b>totalprice</b> : {props.totalprice.toFixed(2)} $\r\n\r\n</div>\r\n</React.Fragment>\r\n\r\n\r\n)\r\n\r\n};\r\n\r\nexport default Order;\r\n","\r\nimport React ,{Component} from 'react';\r\n\r\nimport classes from './orders.module.css';\r\nimport Order from '../../components/ui/order/order';\r\nimport Spinner from '../../components/ui/spinner/spinner';\r\nimport * as actionCreator from  '../../store/actioncreator';\r\n\r\nimport {connect} from 'react-redux';\r\nclass Orders extends Component {\r\n\r\n\r\n// fetching data from firebase\r\ncomponentDidMount() {\r\n\r\nthis.props.fetchorders(this.props.token, this.props.userid);\r\n}\r\n\r\n\r\n\r\nrender(){\r\n\r\nlet spinner = null;\r\nif (this.props.orders.length === 0) {\r\n\r\n  spinner =  <Spinner/>\r\n\r\n}\r\n\r\n\r\nconst orders = this.props.orders.map( res => {\r\n\r\nif (this.props.userid === res.customer.userId) {\r\n\r\nreturn (<Order key={res.id} ingredient={res.ingredient} totalprice={res.totalprice} />)\r\n\r\n}\r\n\r\n})\r\nreturn(\r\n\r\n\r\n<React.Fragment>\r\n<div className={classes.orders}>\r\n<h2> Your Orders !</h2>\r\n\r\n{spinner}\r\n{orders}\r\n</div>\r\n</React.Fragment>\r\n)\r\n\r\n\r\n\r\n\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n\r\nreturn {\r\n\r\norders : state.orders,\r\nordererror : state.ordererror,\r\ntoken : state.token,\r\nuserid : state.userid\r\n\r\n\r\n}\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\nconst mapPropsToDispatch = (dispatch) => {\r\n\r\nreturn {\r\n\r\nfetchorders : (token,userid) => dispatch(actionCreator.fetchorders(token,userid ))\r\n\r\n\r\n}\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default connect(mapStateToProps,mapPropsToDispatch)(Orders);\r\n"],"sourceRoot":""}